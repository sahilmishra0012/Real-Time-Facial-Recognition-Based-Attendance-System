import 'package:crypton/crypton.dart';

RSAPublicKey _publicKey;
RSAPrivateKey _privateKey;

String encrypt(String plain) {
  _publicKey ??= RSAPublicKey.fromPEM(
      "MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAtbfSRdkB3nyD0KVeya5oxDPicCsxRY3Whk8mRDvRuDHHxBE5UM3ysFChP6GKEVNmFfQlgn06Xu6wbaoupTDeAnvksQS2WhZy8ibDG2VHLM+aC+/kkkIVZbA6/SkTYBzL8BeE1JmnOUYkWkba/tuj7XwX6vvtGotVsR2RSw3nVrmy4gNZz1zfQ13Au4296vpGqdUBu6XlqMb7WKP+IWuu2LB3Vu3SW3eHEVthdWzsetvYn7aqBRzs4Kw4nfYpNUeCzelO4M+vRVueEg7GSGZH90w/MzTeXNIdj2aKG7RE7kB/CWVfVL01LpOrtW7bAibpit8ZRloYp+ga+YcGiWCQ0ko8iO7IKipM5q6c+ad9HBBN+JqIvinJe4K+NHCp8Evqx35iq0Xx03qSXqAW2WmYBJKFw73wO7E5vyIriTppaAtwkV3hHe7oqQXNAVFMPlzPWEG04dFxEVycMLpHZwv8m/ExcTyjwUmaYBuzkBJ/oTN9RnZmoJWmPfUXPmMrOmEVmlbSGJDkDAXY3nfdkdSu56TIC1TzuCc/Ymoup9OMR5vyil48yjDBzhgnR9ol7vVCFD+2FRKsM8qm8dA79Ls+d3kDgNxDJ9LafmS1Rh4478dxQKpKiLIwELsJ0+2bCoaEivV0OI/KrANyGByGqzBdKqjc4aDKTl9N/7ZtaBYgaGkCAwEAAQ==");
  return _publicKey.encrypt(plain);
}

String decrypt(String data) {
  _privateKey ??= RSAPrivateKey.fromPEM(
      "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");
  try {
    return _privateKey.decrypt(data);
  } catch (e) {
    return "not-found";
  }
}
